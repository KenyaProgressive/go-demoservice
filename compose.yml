services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    networks:
      - demonetwork
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_ENABLE_AUTO_COMMIT: true
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  kafka_data:

  #   depends_on:
  #     - postgre
  # postgre:
  #   image: postgres:17-alpine
  #   container_name: postgres_db
  #   environment:
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DATABASE_NAME}
  #   networks:
  #     - demonetwork
  # demoservice:
  #   build: .
  #   image: go-demoservice
  #   container_name: go-demoservice
  #   networks:
  #     - demonetwork
  #   ports:
  #     - "localhost:8000:4000"
  #   depends_on:
  #     - broker
networks:
  demonetwork:
    driver: bridge
